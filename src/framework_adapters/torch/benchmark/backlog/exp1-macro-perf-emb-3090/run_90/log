perf_emb.py:126: DeprecationWarning: The 'warn' function is deprecated, use 'warning' instead
  logging.warn("Before init DistEmbedding")
WARNING [perf_emb.py:126] Before init DistEmbedding
perf_emb.py:129: DeprecationWarning: The 'warn' function is deprecated, use 'warning' instead
  logging.warn("After init DistEmbedding")
WARNING [perf_emb.py:129] After init DistEmbedding
========== Running Perf with routine <function routine_local_cache_helper at 0x7f7181964ee0>==========
Worker 0 pid=62006
Worker 1 pid=62007
Worker 2 pid=62008
Worker 3 pid=62009
Worker 4 pid=62010
INFO [distributed_c10d.py:432] Added key: store_based_barrier_key:1 to store for rank: 0
INFO [distributed_c10d.py:432] Added key: store_based_barrier_key:1 to store for rank: 1
INFO [distributed_c10d.py:432] Added key: store_based_barrier_key:1 to store for rank: 2
INFO [distributed_c10d.py:432] Added key: store_based_barrier_key:1 to store for rank: 3
INFO [distributed_c10d.py:466] Rank 0: Completed store-based barrier for key:store_based_barrier_key:1 with 6 nodes.
INFO [distributed_c10d.py:432] Added key: store_based_barrier_key:1 to store for rank: 5
INFO [distributed_c10d.py:466] Rank 2: Completed store-based barrier for key:store_based_barrier_key:1 with 6 nodes.
INFO [distributed_c10d.py:432] Added key: store_based_barrier_key:1 to store for rank: 4
INFO [distributed_c10d.py:466] Rank 1: Completed store-based barrier for key:store_based_barrier_key:1 with 6 nodes.
INFO [distributed_c10d.py:466] Rank 5: Completed store-based barrier for key:store_based_barrier_key:1 with 6 nodes.
INFO [distributed_c10d.py:466] Rank 3: Completed store-based barrier for key:store_based_barrier_key:1 with 6 nodes.
INFO [distributed_c10d.py:466] Rank 4: Completed store-based barrier for key:store_based_barrier_key:1 with 6 nodes.
weight.shape torch.Size([10000000, 32])
weight.shape torch.Size([10000000, 32])
weight.shape torch.Size([10000000, 32])
weight.shape torch.Size([10000000, 32])
weight.shape torch.Size([10000000, 32])
weight.shape torch.Size([10000000, 32])
weight.shape torch.Size([10000000, 32])
weight.shape torch.Size([10000000, 32])
weight.shape torch.Size([10000000, 32])
weight.shape torch.Size([10000000, 32])
weight.shape torch.Size([10000000, 32])
weight.shape torch.Size([10000000, 32])
Step99:rank5, time: 76.573, per_step: 0.765727
Step99:rank0, time: 79.379, per_step: 0.793791
Step99:rank4, time: 80.146, per_step: 0.801461
Step99:rank2, time: 81.604, per_step: 0.816037
Step99:rank1, time: 82.130, per_step: 0.821303
Step99:rank3, time: 83.623, per_step: 0.836228
Step199:rank5, time: 72.100, per_step: 0.713859
Step199:rank0, time: 78.510, per_step: 0.777330
Step199:rank4, time: 80.690, per_step: 0.798910
Step199:rank1, time: 78.909, per_step: 0.781274
Step199:rank2, time: 80.108, per_step: 0.793146
Step199:rank3, time: 80.132, per_step: 0.793388
Step299:rank5, time: 73.146, per_step: 0.724213
Step299:rank0, time: 76.971, per_step: 0.762094
Step299:rank1, time: 76.819, per_step: 0.760581
Step299:rank2, time: 80.534, per_step: 0.797368
Step299:rank4, time: 81.602, per_step: 0.807938
Step299:rank3, time: 80.436, per_step: 0.796400
Step399:rank5, time: 74.487, per_step: 0.737500
Step399:rank0, time: 78.155, per_step: 0.773816
Step399:rank1, time: 77.925, per_step: 0.771538
Step399:rank2, time: 78.796, per_step: 0.780155
Step399:rank4, time: 78.985, per_step: 0.782026
Step399:rank3, time: 82.617, per_step: 0.817993
Step499:rank5, time: 73.533, per_step: 0.728047
Step499:rank0, time: 74.874, per_step: 0.741323
Step499:rank4, time: 72.575, per_step: 0.718565
Step499:rank1, time: 78.261, per_step: 0.774862
Step499:rank2, time: 73.929, per_step: 0.731974
Step499:rank3, time: 69.658, per_step: 0.689685
Worker 5 pid=62013
Successfully xmh
