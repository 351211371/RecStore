WARNING: Logging before InitGoogleLogging() is written to STDERR
I20240128 12:48:02.431027 111569 IPC_barrier.h:128] MultiProcessBarrierFactory->ClearIPCMemory()
/home/xieminhui/RecStore/src/framework_adapters/torch/kg/dgl-0.9.1/python/dgl/_deprecate/graph.py:1023: DGLWarning: multigraph will be deprecated.DGL will treat all graphs as multigraph in the future.
  dgl_warning("multigraph will be deprecated." \
/home/xieminhui/RecStore/src/framework_adapters/torch/kg/dgl-0.9.1/python/dgl/heterograph.py:72: DGLWarning: Recommend creating graphs by `dgl.graph(data)` instead of `dgl.DGLGraph(data)`.
  dgl_warning('Recommend creating graphs by `dgl.graph(data)`'
Reading train triples....
Finished. Read 483142 train triples.
Reading valid triples....
Finished. Read 50000 valid triples.
Reading test triples....
Finished. Read 59071 test triples.
ARGS:  Namespace(model_name='DistMult', data_path='/home/xieminhui/dgl-data', dataset='FB15k', format='built_in', data_files=None, delimiter='\t', save_path='/tmp/ckpts/DistMult_FB15k_11', no_save_emb=True, max_step=500, batch_size=1800, batch_size_eval=16, neg_sample_size=200, neg_deg_sample=False, neg_deg_sample_eval=False, neg_sample_size_eval=14951, eval_percent=1, no_eval_filter=False, log_interval=100, eval_interval=10000, test=False, num_proc=4, num_thread=1, force_sync_interval=1, hidden_dim=400, lr=0.01, gamma=16.0, double_ent=False, double_rel=False, neg_adversarial_sampling=False, adversarial_temperature=1.0, regularization_coef=0.0, regularization_norm=3, pairwise=False, loss_genre='Logsigmoid', margin=1.0, nr_gpus=4, gpu=[0, 1, 2, 3], mix_cpu_gpu=True, valid=False, rel_part=False, async_update=None, has_edge_importance=False, cached_emb_type='None', use_my_emb=False, cache_ratio=0.01, shuffle=False, backwardMode='CppSync', L=10, update_cache_use_omp=0, update_pq_use_omp=0, kForwardItersPerStep=2, backgrad_init='both', eval_filter=True, soft_rel_part=False)
|Train|: 483142
original graph:  DGLGraph(num_nodes=14951, num_edges=592213,
         ndata_schemes={}
         edata_schemes={'tid': Scheme(shape=(), dtype=torch.int64)})
Loading cached metis
WARNING [111569 sampler.py:454] Start PreSampling
WARNING [111569 sampler.py:532] Before construct renumbering_dict
WARNING [111569 sampler.py:555] PreSampling done
W20240128 12:48:04.332314 111569 IPCTensor.h:368] NewIPCTensor: cached_sampler_r0_0 [1000000]0x100000002000 7.629 MB
W20240128 12:48:04.332420 111569 IPCTensor.h:368] NewIPCTensor: cached_sampler_r0_1 [1000000]0x1000007a5000 7.629 MB
W20240128 12:48:04.332441 111569 IPCTensor.h:368] NewIPCTensor: cached_sampler_r0_2 [1000000]0x100000f48000 7.629 MB
W20240128 12:48:04.332458 111569 IPCTensor.h:368] NewIPCTensor: cached_sampler_r0_3 [1000000]0x1000016eb000 7.629 MB
W20240128 12:48:04.332476 111569 IPCTensor.h:368] NewIPCTensor: cached_sampler_r0_4 [1000000]0x100001e8e000 7.629 MB
W20240128 12:48:04.332499 111569 IPCTensor.h:368] NewIPCTensor: cached_sampler_r0_5 [1000000]0x100002631000 7.629 MB
W20240128 12:48:04.332517 111569 IPCTensor.h:368] NewIPCTensor: cached_sampler_r0_6 [1000000]0x100002dd4000 7.629 MB
W20240128 12:48:04.332541 111569 IPCTensor.h:368] NewIPCTensor: cached_sampler_r0_7 [1000000]0x100003577000 7.629 MB
W20240128 12:48:04.332556 111569 IPCTensor.h:368] NewIPCTensor: cached_sampler_r0_8 [1000000]0x100003d1a000 7.629 MB
W20240128 12:48:04.332572 111569 IPCTensor.h:368] NewIPCTensor: cached_sampler_r0_9 [1000000]0x1000044bd000 7.629 MB
W20240128 12:48:04.332592 111569 IPCTensor.h:368] NewIPCTensor: step_r0 [10]0x100004c60000 80 B 
W20240128 12:48:04.332609 111569 IPCTensor.h:368] NewIPCTensor: circle_buffer_end_r0 [1]0x100004c62000 8 B 
W20240128 12:48:04.332623 111569 IPCTensor.h:368] NewIPCTensor: circle_buffer_end_cppseen_r0 [1]0x100004c64000 8 B 
W20240128 12:48:04.332698 111569 IPCTensor.h:368] NewIPCTensor: cached_sampler_r1_0 [1000000]0x100004c66000 7.629 MB
W20240128 12:48:04.332720 111569 IPCTensor.h:368] NewIPCTensor: cached_sampler_r1_1 [1000000]0x100005409000 7.629 MB
W20240128 12:48:04.332734 111569 IPCTensor.h:368] NewIPCTensor: cached_sampler_r1_2 [1000000]0x100005bac000 7.629 MB
W20240128 12:48:04.332764 111569 IPCTensor.h:368] NewIPCTensor: cached_sampler_r1_3 [1000000]0x10000634f000 7.629 MB
W20240128 12:48:04.332783 111569 IPCTensor.h:368] NewIPCTensor: cached_sampler_r1_4 [1000000]0x100006af2000 7.629 MB
W20240128 12:48:04.332801 111569 IPCTensor.h:368] NewIPCTensor: cached_sampler_r1_5 [1000000]0x100007295000 7.629 MB
W20240128 12:48:04.332819 111569 IPCTensor.h:368] NewIPCTensor: cached_sampler_r1_6 [1000000]0x100007a38000 7.629 MB
W20240128 12:48:04.332840 111569 IPCTensor.h:368] NewIPCTensor: cached_sampler_r1_7 [1000000]0x1000081db000 7.629 MB
W20240128 12:48:04.332859 111569 IPCTensor.h:368] NewIPCTensor: cached_sampler_r1_8 [1000000]0x10000897e000 7.629 MB
W20240128 12:48:04.332873 111569 IPCTensor.h:368] NewIPCTensor: cached_sampler_r1_9 [1000000]0x100009121000 7.629 MB
W20240128 12:48:04.332891 111569 IPCTensor.h:368] NewIPCTensor: step_r1 [10]0x1000098c4000 80 B 
W20240128 12:48:04.332904 111569 IPCTensor.h:368] NewIPCTensor: circle_buffer_end_r1 [1]0x1000098c6000 8 B 
W20240128 12:48:04.332917 111569 IPCTensor.h:368] NewIPCTensor: circle_buffer_end_cppseen_r1 [1]0x1000098c8000 8 B 
W20240128 12:48:04.332952 111569 IPCTensor.h:368] NewIPCTensor: cached_sampler_r2_0 [1000000]0x1000098ca000 7.629 MB
W20240128 12:48:04.332974 111569 IPCTensor.h:368] NewIPCTensor: cached_sampler_r2_1 [1000000]0x10000a06d000 7.629 MB
W20240128 12:48:04.332989 111569 IPCTensor.h:368] NewIPCTensor: cached_sampler_r2_2 [1000000]0x10000a810000 7.629 MB
W20240128 12:48:04.333003 111569 IPCTensor.h:368] NewIPCTensor: cached_sampler_r2_3 [1000000]0x10000afb3000 7.629 MB
W20240128 12:48:04.333019 111569 IPCTensor.h:368] NewIPCTensor: cached_sampler_r2_4 [1000000]0x10000b756000 7.629 MB
W20240128 12:48:04.333034 111569 IPCTensor.h:368] NewIPCTensor: cached_sampler_r2_5 [1000000]0x10000bef9000 7.629 MB
W20240128 12:48:04.333053 111569 IPCTensor.h:368] NewIPCTensor: cached_sampler_r2_6 [1000000]0x10000c69c000 7.629 MB
W20240128 12:48:04.333070 111569 IPCTensor.h:368] NewIPCTensor: cached_sampler_r2_7 [1000000]0x10000ce3f000 7.629 MB
W20240128 12:48:04.333088 111569 IPCTensor.h:368] NewIPCTensor: cached_sampler_r2_8 [1000000]0x10000d5e2000 7.629 MB
W20240128 12:48:04.333106 111569 IPCTensor.h:368] NewIPCTensor: cached_sampler_r2_9 [1000000]0x10000dd85000 7.629 MB
W20240128 12:48:04.333120 111569 IPCTensor.h:368] NewIPCTensor: step_r2 [10]0x10000e528000 80 B 
W20240128 12:48:04.333133 111569 IPCTensor.h:368] NewIPCTensor: circle_buffer_end_r2 [1]0x10000e52a000 8 B 
W20240128 12:48:04.333146 111569 IPCTensor.h:368] NewIPCTensor: circle_buffer_end_cppseen_r2 [1]0x10000e52c000 8 B 
W20240128 12:48:04.333179 111569 IPCTensor.h:368] NewIPCTensor: cached_sampler_r3_0 [1000000]0x10000e52e000 7.629 MB
W20240128 12:48:04.333197 111569 IPCTensor.h:368] NewIPCTensor: cached_sampler_r3_1 [1000000]0x10000ecd1000 7.629 MB
W20240128 12:48:04.333211 111569 IPCTensor.h:368] NewIPCTensor: cached_sampler_r3_2 [1000000]0x10000f474000 7.629 MB
W20240128 12:48:04.333230 111569 IPCTensor.h:368] NewIPCTensor: cached_sampler_r3_3 [1000000]0x10000fc17000 7.629 MB
W20240128 12:48:04.333245 111569 IPCTensor.h:368] NewIPCTensor: cached_sampler_r3_4 [1000000]0x1000103ba000 7.629 MB
W20240128 12:48:04.333262 111569 IPCTensor.h:368] NewIPCTensor: cached_sampler_r3_5 [1000000]0x100010b5d000 7.629 MB
W20240128 12:48:04.333278 111569 IPCTensor.h:368] NewIPCTensor: cached_sampler_r3_6 [1000000]0x100011300000 7.629 MB
W20240128 12:48:04.333297 111569 IPCTensor.h:368] NewIPCTensor: cached_sampler_r3_7 [1000000]0x100011aa3000 7.629 MB
W20240128 12:48:04.333312 111569 IPCTensor.h:368] NewIPCTensor: cached_sampler_r3_8 [1000000]0x100012246000 7.629 MB
W20240128 12:48:04.333328 111569 IPCTensor.h:368] NewIPCTensor: cached_sampler_r3_9 [1000000]0x1000129e9000 7.629 MB
W20240128 12:48:04.333343 111569 IPCTensor.h:368] NewIPCTensor: step_r3 [10]0x10001318c000 80 B 
W20240128 12:48:04.333356 111569 IPCTensor.h:368] NewIPCTensor: circle_buffer_end_r3 [1]0x10001318e000 8 B 
W20240128 12:48:04.333372 111569 IPCTensor.h:368] NewIPCTensor: circle_buffer_end_cppseen_r3 [1]0x100013190000 8 B 
{0: Graph(num_nodes=10523, num_edges=182012,
      ndata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64), 'inner_node': Scheme(shape=(), dtype=torch.int32), 'part_id': Scheme(shape=(), dtype=torch.int64)}
      edata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64), 'inner_edge': Scheme(shape=(), dtype=torch.int8)}), 1: Graph(num_nodes=10996, num_edges=244360,
      ndata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64), 'inner_node': Scheme(shape=(), dtype=torch.int32), 'part_id': Scheme(shape=(), dtype=torch.int64)}
      edata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64), 'inner_edge': Scheme(shape=(), dtype=torch.int8)}), 2: Graph(num_nodes=9404, num_edges=143355,
      ndata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64), 'inner_node': Scheme(shape=(), dtype=torch.int32), 'part_id': Scheme(shape=(), dtype=torch.int64)}
      edata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64), 'inner_edge': Scheme(shape=(), dtype=torch.int8)}), 3: Graph(num_nodes=10954, num_edges=175447,
      ndata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64), 'inner_node': Scheme(shape=(), dtype=torch.int32), 'part_id': Scheme(shape=(), dtype=torch.int64)}
      edata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64), 'inner_edge': Scheme(shape=(), dtype=torch.int8)})}
MertisPartition: part 0 has 10523 N 182012 E
MertisPartition: part 1 has 10996 N 244360 E
MertisPartition: part 2 has 9404 N 143355 E
MertisPartition: part 3 has 10954 N 175447 E
Rank0: cached key size 37
Rank1: cached key size 37
Rank2: cached key size 37
Rank3: cached key size 37
Before renumbering graph:  {'_ID': tensor([    5,    14,    17,  ..., 11245,  2040,  3009]), 'inner_node': tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32), 'part_id': tensor([0, 0, 0,  ..., 2, 3, 3])}
After renumbering graph:  {'_ID': tensor([ 274,  453,  529,  ..., 1123, 5349, 6567]), 'inner_node': tensor([1, 1, 1,  ..., 0, 0, 0], dtype=torch.int32), 'part_id': tensor([0, 0, 0,  ..., 2, 3, 3])}
part_g: DGLGraph(num_nodes=10523, num_edges=182012,
         ndata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64)}
         edata_schemes={'tid': Scheme(shape=(), dtype=torch.int64)})
part_g: DGLGraph(num_nodes=10523, num_edges=182012,
         ndata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64)}
         edata_schemes={'tid': Scheme(shape=(), dtype=torch.int64)})
Total initialize time 2.066 seconds
[Rank1] pid = 111777
[Rank2] pid = 111842
INFO [111569 distributed_c10d.py:442] Added key: store_based_barrier_key:1 to store for rank: 0
INFO [111777 distributed_c10d.py:442] Added key: store_based_barrier_key:1 to store for rank: 1
INFO [111842 distributed_c10d.py:442] Added key: store_based_barrier_key:1 to store for rank: 2
INFO [111777 distributed_c10d.py:476] Rank 1: Completed store-based barrier for key:store_based_barrier_key:1 with 4 nodes.
INFO [111906 distributed_c10d.py:442] Added key: store_based_barrier_key:1 to store for rank: 3
INFO [111842 distributed_c10d.py:476] Rank 2: Completed store-based barrier for key:store_based_barrier_key:1 with 4 nodes.
INFO [111906 distributed_c10d.py:476] Rank 3: Completed store-based barrier for key:store_based_barrier_key:1 with 4 nodes.
INFO [111569 distributed_c10d.py:476] Rank 0: Completed store-based barrier for key:store_based_barrier_key:1 with 4 nodes.
I20240128 12:48:07.872680 111778 IPC_barrier.h:118] CreateBarrier: new barrier, name: start_barrier, count: 4
I20240128 12:48:07.896875 111908 IPC_barrier.h:112] CreateBarrier: find existing barrier, name: start_barrier, count: 4
I20240128 12:48:07.921309 111843 IPC_barrier.h:112] CreateBarrier: find existing barrier, name: start_barrier, count: 4
I20240128 12:48:07.931174 111907 IPC_barrier.h:112] CreateBarrier: find existing barrier, name: start_barrier, count: 4
train_sampler.Prefill()
before start barrier
start train
[proc 3] 100 steps, total: 4.859, sample: 0.239, forward: 1.418, backward: 1.946, update: 0.732
train_sampler.Prefill()
before start barrier
start train
[proc 1] 100 steps, total: 4.884, sample: 0.261, forward: 1.438, backward: 2.004, update: 0.639
[Rank3] pid = 111906
train_sampler.Prefill()
-------Step 0-------
tensor([   30,  3570,  9188,  6722,  7344,  4030,  9055,  3940, 12554,  9818]) tensor([  529,  7928,  9274,  3014,  6976,  8022, 12972,  8404,  7208,  7100])
-------Step 1-------
tensor([   30,  3570,  9188,  6722,  7344,  4030,  9055,  3940, 12554,  9818]) tensor([11276, 10684,   363,  2631,  1147, 11431,  5833,  2116,  1665, 14419])
-------Step 2-------
tensor([ 9554,  9450,  5008,  7355,   893,  6774,  7019,  1863, 13139,  7534]) tensor([ 7024,  4476,  2432, 10076,  6501,  3036,  3742, 12904, 11883,  2881])
-------Step 3-------
tensor([ 9554,  9450,  5008,  7355,   893,  6774,  7019,  1863, 13139,  7534]) tensor([ 8414,  4574,  3655,  7888, 12258,  9613, 13501,  9237, 14739,  4585])
-------Step 4-------
tensor([12079,  4031,  6160,  1761, 10898, 10123, 14120, 12206,  9432,  6197]) tensor([ 2221,  8261,  6283, 10580,  8614, 11640,   667,  1602, 10671, 13657])
-------Step 5-------
tensor([12079,  4031,  6160,  1761, 10898, 10123, 14120, 12206,  9432,  6197]) tensor([11524,  8552, 10494, 14183,   765, 11052,  8237, 12579, 11270, 13423])
-------Step 6-------
tensor([ 9860,  9400,  2289, 11033, 12557,  7447,  9103,  2046,  2909,  9020]) tensor([ 5454, 11615,  7084, 11427,  7158,   856,  9098, 12194, 11502, 11564])
-------Step 7-------
tensor([ 9860,  9400,  2289, 11033, 12557,  7447,  9103,  2046,  2909,  9020]) tensor([10249, 12997,  6164, 11602,  7728, 11663, 10521, 14591, 14421,  9128])
-------Step 8-------
tensor([ 4000,  8169, 12550,  9891,    27, 11122,  7149,  9517,  4648,  9450]) tensor([13471,  9970, 12965,   110, 12474,  9257,  6048,  1216,  6201,  8898])
-------Step 9-------
tensor([ 4000,  8169, 12550,  9891,    27, 11122,  7149,  9517,  4648,  9450]) tensor([ 8098, 12811,  5528,  6749,  3277,  5724,    25,  6865,  6032, 12325])
before start barrier
start train
[proc 0] 100 steps, total: 4.825, sample: 0.249, forward: 1.498, backward: 2.226, update: 0.617
train_sampler.Prefill()
before start barrier
start train
[proc 2] 100 steps, total: 4.835, sample: 0.255, forward: 1.425, backward: 1.800, update: 0.638
+---------------------------+---------------------------+---------------------------+
| Name                      | P50                       | P99                       |
+---------------------------+---------------------------+---------------------------+
| GenInput                  | 992.624 us                | 15.776 ms                 |
| Forward                   | 5.732 ms                  | 23.236 ms                 |
| Backward                  | 2.116 ms                  | 442.031 ms                |
| Optimize                  | 5.435 ms                  | 12.023 ms                 |
| OneStep                   | 15.861 ms                 | 1.379 s                   |
+---------------------------+---------------------------+---------------------------+
[proc 1] 200 steps, total: 1.885, sample: 0.270, forward: 0.532, backward: 0.206, update: 0.530
[proc 0] 200 steps, total: 1.885, sample: 0.263, forward: 0.557, backward: 0.201, update: 0.519
[proc 2] 200 steps, total: 1.885, sample: 0.261, forward: 0.515, backward: 0.206, update: 0.520
[proc 3] 200 steps, total: 1.885, sample: 0.226, forward: 0.449, backward: 0.200, update: 0.601
[proc 0] 300 steps, total: 2.330, sample: 0.264, forward: 0.593, backward: 0.205, update: 0.557
[proc 2] 300 steps, total: 2.330, sample: 0.293, forward: 0.577, backward: 0.207, update: 0.568
[proc 1] 300 steps, total: 2.331, sample: 0.296, forward: 0.576, backward: 0.209, update: 0.568
[proc 3] 300 steps, total: 2.330, sample: 0.331, forward: 0.531, backward: 0.204, update: 0.643
+---------------------------+---------------------------+---------------------------+
| Name                      | P50                       | P99                       |
+---------------------------+---------------------------+---------------------------+
| GenInput                  | 1.016 ms                  | 16.088 ms                 |
| Forward                   | 5.722 ms                  | 12.335 ms                 |
| Backward                  | 2.130 ms                  | 2.473 ms                  |
| Optimize                  | 5.389 ms                  | 10.599 ms                 |
| OneStep                   | 17.475 ms                 | 40.296 ms                 |
+---------------------------+---------------------------+---------------------------+
[proc 3] 400 steps, total: 2.483, sample: 0.304, forward: 0.578, backward: 0.192, update: 0.690
[proc 2] 400 steps, total: 2.484, sample: 0.316, forward: 0.600, backward: 0.195, update: 0.603
[proc 0] 400 steps, total: 2.484, sample: 0.302, forward: 0.625, backward: 0.201, update: 0.591
[proc 1] 400 steps, total: 2.484, sample: 0.316, forward: 0.606, backward: 0.209, update: 0.602
[proc 2] 500 steps, total: 2.111, sample: 0.275, forward: 0.537, backward: 0.216, update: 0.551
[proc 0] 500 steps, total: 2.111, sample: 0.257, forward: 0.583, backward: 0.208, update: 0.555
Successfully xmh. training takes 13.635656595230103 seconds
[proc 1] 500 steps, total: 2.111, sample: 0.254, forward: 0.555, backward: 0.209, update: 0.560
before call kg_cache_controller.StopThreads()
[proc 3] 500 steps, total: 2.112, sample: 0.228, forward: 0.548, backward: 0.149, update: 0.686
+---------------------------+---------------------------+---------------------------+
| Name                      | P50                       | P99                       |
+---------------------------+---------------------------+---------------------------+
| GenInput                  | 1.045 ms                  | 16.291 ms                 |
| Forward                   | 5.842 ms                  | 10.881 ms                 |
| Backward                  | 2.153 ms                  | 2.414 ms                  |
| Optimize                  | 5.492 ms                  | 9.199 ms                  |
| OneStep                   | 18.329 ms                 | 40.054 ms                 |
+---------------------------+---------------------------+---------------------------+
KGCacheControllerWrapperDummy.StopThreads
